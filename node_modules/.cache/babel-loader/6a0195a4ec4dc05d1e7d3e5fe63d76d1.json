{"ast":null,"code":"var _jsxFileName = \"/Users/skrothapalli/Documents/auto-complete-system-react/src/SearchSuggestions/SearchSuggestions.js\";\nimport React from 'react';\n\nfunction SearchSuggestions(props) {\n  return React.createElement(\"div\", {\n    className: \"searchSuggestions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, props.searchSuggestions.map(movie => {\n    return React.createElement(\"div\", {\n      className: \"searchSuggestionList\",\n      key: movie.imdbID,\n      onClick: () => props.updateSelectedMovies(movie),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, movie.Title);\n  }), props.searchSuggestionError === true ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"No Results Found\") : null);\n}\n\nexport default SearchSuggestions;","map":{"version":3,"sources":["/Users/skrothapalli/Documents/auto-complete-system-react/src/SearchSuggestions/SearchSuggestions.js"],"names":["React","SearchSuggestions","props","searchSuggestions","map","movie","imdbID","updateSelectedMovies","Title","searchSuggestionError"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,SACI;AAAK,IAAA,SAAS,EAAE,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,KAAK,CAACC,iBAAN,CAAwBC,GAAxB,CAA6BC,KAAD,IAAU;AACtC,WACA;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAsC,MAAA,GAAG,EAAEA,KAAK,CAACC,MAAjD;AAAyD,MAAA,OAAO,EAAE,MAAKJ,KAAK,CAACK,oBAAN,CAA2BF,KAA3B,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2GA,KAAK,CAACG,KAAjH,CADA;AAGD,GAJC,CADJ,EAMGN,KAAK,CAACO,qBAAN,KAAgC,IAAhC,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADH,GAIG,IAVN,CADJ;AAcH;;AAED,eAAeR,iBAAf","sourcesContent":["import React from 'react';\n\nfunction SearchSuggestions(props) {\n    return (\n        <div className =\"searchSuggestions\">\n          { props.searchSuggestions.map((movie)=> {\n            return (\n            <div className=\"searchSuggestionList\" key={movie.imdbID} onClick={() =>props.updateSelectedMovies(movie)}>{movie.Title}</div>\n            )\n          })}\n          {props.searchSuggestionError === true ? (\n              <div>\n                  No Results Found\n              </div>\n          ) : null}\n        </div>\n    )\n}\n\nexport default SearchSuggestions;\n"]},"metadata":{},"sourceType":"module"}